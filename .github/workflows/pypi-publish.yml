name: 🎀 艾莉丝的PyPI包裹快递服务 ~

# 艾莉丝今天也要努力发包呢!
on:
  push:
    tags:
      - 'v*.*.*'           # v2.0.0
      - 'v*.*.*.dev*'      # v2.0.0.dev0
      - 'v*.*.*.alpha*'    # v2.0.0.alpha0
      - 'v*.*.*.beta*'     # v2.0.0.beta0

  workflow_dispatch: {}    # 手动触发

permissions:
  contents: read

jobs:
  # 第一阶段: 打包准备
  release-build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 版本检查
        id: version
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          echo "✨ 当前版本: $CURRENT_TAG"

          if [[ $CURRENT_TAG =~ \.dev|\.alpha|\.beta ]]; then
            BASE_VERSION=$(echo $CURRENT_TAG | sed -E 's/([0-9]+)$//')
            PREV_TAG=$(git tag --sort=-v:refname | grep "^$BASE_VERSION" | grep -v "$CURRENT_TAG" | head -n 1)

            if [ -z "$PREV_TAG" ]; then
              echo "💢 找不到上一个版本!"
              exit 1
            fi
            echo "🎀 发现上一个试验版本: $PREV_TAG"
            git checkout $PREV_TAG
            echo "use_current=false" >> $GITHUB_OUTPUT
          else
            echo "🌟 正式版本~"
            echo "use_current=true" >> $GITHUB_OUTPUT
          fi

      - name: 环境准备
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: 打包构建
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m build

      - name: 暂存包裹
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  # 第二阶段: 发布上传
  pypi-publish:
    runs-on: ubuntu-latest
    needs: [ release-build ]
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/erispulse

    steps:
      - name: 获取包裹
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: 发布上传
        id: publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true

      - name: 💌 准备并发送邮件通知
        env:
          MAIL_USER: ${{ secrets.MAIL_USER }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          SUBJECT: "[艾莉丝快报] 新版本 ${{ steps.version.outputs.CURRENT_TAG }} 已发布至 PyPI！✨"
          CONTENT: |
            🎀 您好主人~

            我是艾莉丝，负责为您播报最新消息！
            今天我们的项目又更新啦~快去看看吧！

            🔖 版本号：${{ steps.version.outputs.CURRENT_TAG }}
            📦 包地址：
            https://pypi.org/project/erispulse/${{ steps.version.outputs.CURRENT_TAG }}

            📝 更新内容：
            ${{ steps.version.outputs.CURRENT_TAG }}

            祝您每天都有好心情~ 💖
            —— 艾莉丝
        run: |
          # 读取收件人列表
          emails=$(cat .github/config/notify_emails.json | jq -r '.emails[]')

          cat << EOF > send_mail.py
          import smtplib
          from email.message import EmailMessage
          import os
          import json

          # 直接读取 .github/config/notify_emails.json
          with open('.github/config/notify_emails.json', 'r') as f:
              config = json.load(f)
              recipients = config['emails']

          msg = EmailMessage()
          msg['Subject'] = os.getenv("SUBJECT")
          msg['From'] = os.getenv("MAIL_USER")
          msg['To'] = ", ".join(recipients)
          msg.set_content(os.getenv("CONTENT"))

          with smtplib.SMTP_SSL("mail.anran.xyz", 465) as server:
              server.login(os.getenv("MAIL_USER"), os.getenv("MAIL_PASSWORD"))
              server.send_message(msg)

          print("💌 魔法信件已成功寄出！")
          EOF

          python send_mail.py