name: Auto Tag and Release

permissions:
  contents: write

on:
  push:
    branches: [ main ]

jobs:
  auto-tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: 手动克隆代码
        run: |
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git .
      
      - name: 从 pyproject.toml 提取版本号
        id: get_version
        run: |
          version=$(grep '^version' pyproject.toml | head -1 | sed 's/version = "//;s/"//')
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "当前版本：$version"
      
      - name: 获取最新 Git 标签
        id: get_tag
        run: |
          tag=$(git tag --sort=-v:refname | head -n 1)
          echo "latest_tag=$tag" >> $GITHUB_OUTPUT
          echo "最新标签：$tag"
      
      - name: 检查版本更新并打标签
        id: create_tag
        run: |
          current_version=${{ steps.get_version.outputs.version }}
          latest_tag=${{ steps.get_tag.outputs.latest_tag }}
          if [ "v$current_version" != "$latest_tag" ]; then
            echo "检测到新版本：v$current_version"
            git tag "v$current_version"
            git push origin "v$current_version"
          else
            echo "版本无更新，跳过打标签。"
          fi
      
      - name: 创建 GitHub Release
        run: |
          current_version=${{ steps.get_version.outputs.version }}
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{\"tag_name\": \"v$current_version\", \"name\": \"Release v$current_version\", \"body\": \"自动创建 Release，由 CI 自动生成。\"}"